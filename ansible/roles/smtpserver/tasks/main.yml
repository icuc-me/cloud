---

- name: Required packages are installed
  package:
      name:
          - postfix
          - python3-firewall
      state: present
  register: _tmp_result
  until: _tmp_result is success

- name: SMTP services are allowed through the firewall
  firewalld:
      immediate: True
      permanent: True
      service: '{{ item }}'
      state: 'enabled'
  with_items: '{{ smtpserver_firewalld_services }}'

- name: SMTP ports are allowed through the firewall
  firewalld:
      immediate: True
      permanent: True
      port: '{{ item }}/tcp'
      state: 'enabled'
  with_items: '{{ smtpserver_firewalld_tcp_ports }}'

- name: The postfix user is a member of the mail and letsencrypt group
  user:
      name: postfix
      groups:
          - postfix
          - mail
          - letsencrypt
      system: True
  notify:
    - "restart postfix"

- name: Postconf to YAML conversion script is deployed
  copy:
      dest: '/usr/local/sbin/'
      src: 'postconf_yaml.sh'
      owner: 'root'
      group: 'root'
      mode: '0750'

- name: Existing postfix options are retrieved
  command: /usr/local/sbin/postconf_yaml.sh
  changed_when: False  # only looking
  register: postconf_yaml

- name: Buffer is parsed as a YAML dictionary
  set_fact:
    current: '{{ postconf_yaml.stdout | default("{}", True) | from_yaml }}'

- name: Current configuration is initialized empty
  set_fact:
      current:
          postfix_configuration: {}
  when: not current.postfix_configuration | default('', True) | length

- name: Current settings missing from desired settings are removed
  command: 'postconf -X {{ item }}'
  notify:
    - "restart postfix"
  when: item not in desired_postconf | list
  with_items: '{{ current.postfix_configuration | list}}'

- name: Desired settings missing or different from current are added
  command: 'postconf "{{ item.key }}={{ item.value }}"'
  notify:
    - "restart postfix"
  when: current.postfix_configuration[item.key] | default(None,True) != item.value
  with_dict: '{{ desired_postconf }}'

- name: Postfix hash databases and other files are written
  copy:
      backup: True
      dest: '{{ item.key }}'
      content: '{{ item.value }}'
      owner: root
      group: root
      mode: '0600'
  notify:
    - "reload postfix"
  with_dict: '{{ postfix_files }}'

- name: The e-mail aliases database is updated
  include_role:
    name: emailalias
  vars:
    aliases: '{{ email_aliases }}'

- name: The postfix service is enabled to start on boot
  systemd:
    name: postfix
    enabled: True
  notify: # database render needed on change
    - "reload postfix"
    - "start postfix"

- name: Utility to list non-default settings is installed
  copy:
      src: postconf_changed.sh
      dest: /usr/local/sbin/
      owner: root
      group: root
      mode: '0755'
